{"version":3,"sources":["component/EditBlock/settingsBlock.module.css","component/UniversalInput/input.module.css","component/Count/count.module.css","component/PreviewBlock/previewBlock.module.css","App.module.css","component/UniversalButton/btn.module.css","reducer/reducer.ts","component/UniversalInput/UniversalInput.tsx","component/UniversalButton/UniversalButton.tsx","localStorage/localStorage.ts","component/EditBlock/SettingsBlock.tsx","component/Count/Count.tsx","component/PreviewBlock/PreviewBlock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","UniversalInput","error","initialValue","onChange","spanText","className","finalClassName","s","errorInput","defaultStyle","inputWrap","inputDesc","type","value","UniversalButton","callBack","name","count","disabled","disabledValue","commonBtn","navLink","linkPath","previousLinkPath","onClickHandler","defineNavLink","defineButton","finalBtnClassName","btnDisabled","btn","to","onClick","line","lineTop","lineLeft","lineRight","lineBottom","reducer","state","action","INCREMENT_VALUE","counterSettings","maxValue","DECREMENT_VALUE","RESET_VALUE","installedSettings","startCounterValue","SET_MAX_VALUE","maxCounterValue","SET_START_VALUE","APPLYING_SETTINGS","SAVE_IN_LOCAL_STORAGE","key","stateAsString","JSON","stringify","localStorage","setItem","saveState","THROW_ERROR","SettingsBlock","dispatch","settingsBlock","settingsBlockInput","settingsBlockInputMax","settingsBlockInputStart","settingsBlockBtn","Count","startValue","showText","ClassNameForNum","countFinal","countText","textOrValue","PreviewBlock","previewBlock","btnWrap","App","dateFromLocalStorage","defaultState","getItem","parse","restoreState","useReducer","app","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4c6e264.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBlock\":\"settingsBlock_settingsBlock__2X9PL\",\"settingsBlockBtn\":\"settingsBlock_settingsBlockBtn__1F-BT\",\"settingsBlockInput\":\"settingsBlock_settingsBlockInput__2O8Q0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultStyle\":\"input_defaultStyle__20niH\",\"inputWrap\":\"input_inputWrap__2Q8oP\",\"inputDesc\":\"input_inputDesc__10D6r\",\"errorInput\":\"input_errorInput__2FO1g\",\"customInput\":\"input_customInput__2LYGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"count_count__3ADD2\",\"countFinal\":\"count_countFinal__2XWJS\",\"countText\":\"count_countText__24bVU\",\"blinkText\":\"count_blinkText__-JBUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewBlock\":\"previewBlock_previewBlock__1EIcP\",\"btnWrap\":\"previewBlock_btnWrap__3hV7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__-Ccqf\",\"previewBlock\":\"App_previewBlock__1fBKt\",\"editBlock\":\"App_editBlock___cZAQ\",\"btnWrap\":\"App_btnWrap__1O_6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"btn_btn__omS_V\",\"line\":\"btn_line__1ulnf\",\"lineTop\":\"btn_lineTop__3pisj\",\"lineBottom\":\"btn_lineBottom__3dEE5\",\"lineLeft\":\"btn_lineLeft__2aQ00\",\"lineRight\":\"btn_lineRight__1XqCM\",\"btnDisabled\":\"btn_btnDisabled__3VJyz\"};","import {StateType} from \"../App\";\r\nimport {saveState} from \"../localStorage/localStorage\";\r\n\r\nexport enum ACTION_TYPE {\r\n   INCREMENT_VALUE = 'INCREMENT_VALUE',\r\n   DECREMENT_VALUE = 'DECREMENT_VALUE',\r\n   RESET_VALUE = 'RESET_VALUE',\r\n   SET_MAX_VALUE = 'SET_MAX_VALUE',\r\n   SET_START_VALUE = 'SET_START_VALUE',\r\n   APPLYING_SETTINGS = 'APPLYING_SETTINGS',\r\n   THROW_ERROR = 'THROW_ERROR',\r\n   SAVE_IN_LOCAL_STORAGE = 'SAVE_IN_LOCAL_STORAGE'\r\n}\r\n\r\ntype ActionTypeEnumType = {\r\n   type: ACTION_TYPE.INCREMENT_VALUE | ACTION_TYPE.DECREMENT_VALUE | ACTION_TYPE.RESET_VALUE | ACTION_TYPE.SAVE_IN_LOCAL_STORAGE\r\n}\r\n\r\ntype ActionTypeMaxValue = {\r\n   type: ACTION_TYPE.SET_MAX_VALUE\r\n   maxCounterValue: number\r\n}\r\n\r\ntype ActionTypeStartValue = {\r\n   type: ACTION_TYPE.SET_START_VALUE\r\n   startCounterValue: number\r\n}\r\n\r\ntype ActionTypeError = {\r\n   type: ACTION_TYPE.THROW_ERROR\r\n   error: boolean\r\n}\r\ntype ActionTypeDisabled = {\r\n   type: ACTION_TYPE.APPLYING_SETTINGS\r\n   disabled: boolean\r\n}\r\n\r\nexport type ActionType =\r\n   ActionTypeEnumType\r\n   | ActionTypeStartValue\r\n   | ActionTypeMaxValue\r\n   | ActionTypeDisabled\r\n   | ActionTypeError\r\n\r\n\r\nexport const reducer = (state: StateType, action: ActionType): StateType => {\r\n\r\n   switch (action.type) {\r\n      case ACTION_TYPE.INCREMENT_VALUE :\r\n         return {\r\n            ...state, counterSettings: {\r\n               initialValue: state.counterSettings.initialValue + 1,\r\n               maxValue: state.counterSettings.maxValue\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE.DECREMENT_VALUE:\r\n         return {\r\n            ...state, counterSettings: {\r\n               initialValue: state.counterSettings.initialValue - 1,\r\n               maxValue: state.counterSettings.maxValue\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE.RESET_VALUE:\r\n         return {\r\n            ...state, counterSettings: {\r\n               initialValue: state.installedSettings.startCounterValue,\r\n               maxValue: state.counterSettings.maxValue\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE.SET_MAX_VALUE:\r\n         return {\r\n            ...state, installedSettings: {\r\n               maxCounterValue: action.maxCounterValue,\r\n               startCounterValue: state.installedSettings.startCounterValue\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE.SET_START_VALUE:\r\n         return {\r\n            ...state, installedSettings: {\r\n               startCounterValue: action.startCounterValue,\r\n               maxCounterValue: state.installedSettings.maxCounterValue\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE.APPLYING_SETTINGS:\r\n         return {\r\n            ...state,\r\n            disabled: action.disabled,\r\n            counterSettings: {\r\n               initialValue: state.installedSettings.startCounterValue,\r\n               maxValue: state.installedSettings.maxCounterValue\r\n            },\r\n         }\r\n\r\n      case ACTION_TYPE.SAVE_IN_LOCAL_STORAGE:\r\n         saveState('Counter_Settings', state.installedSettings)\r\n         break\r\n\r\n      case ACTION_TYPE.THROW_ERROR:\r\n         return {...state, error: action.error}\r\n\r\n   }\r\n\r\n   return state\r\n}","import React from \"react\";\r\nimport s from './input.module.css'\r\nimport {InputNumber} from 'antd';\r\n\r\ntype UniversalInputType = {\r\n   error: boolean\r\n   initialValue: number\r\n   onChange: (value: number) => void\r\n   spanText: string\r\n   className?: string\r\n}\r\n\r\nexport const UniversalInput: React.FC<UniversalInputType> = (\r\n   {error, initialValue, onChange, spanText, className}) => {\r\n\r\n   const finalClassName = error ? `${s.errorInput} ${s.defaultStyle}` : s.defaultStyle\r\n\r\n   const onChangeHandler = (value: number) => onChange(value)\r\n\r\n\r\n   return (\r\n      <div className={`${s.inputWrap} ${className}`}>\r\n         <span className={s.inputDesc}>{spanText}</span>\r\n         <InputNumber className={finalClassName} type=\"number\" value={initialValue} onChange={onChangeHandler}/>\r\n      </div>\r\n   )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './btn.module.css'\r\n\r\n\r\ntype PropsType = {\r\n   navLink: boolean\r\n   commonBtn: boolean\r\n   disabled: boolean\r\n   name: string\r\n   previousLinkPath?: string\r\n   linkPath?: string\r\n   disabledValue?: number\r\n   count?: number\r\n   callBack?: () => void\r\n   className?: string\r\n}\r\n\r\nexport const UniversalButton: React.FC<PropsType> = (\r\n   {\r\n      callBack, name, count, disabled,\r\n      disabledValue, commonBtn, navLink,\r\n      linkPath, previousLinkPath, className, ...props\r\n   }) => {\r\n\r\n   const onClickHandler = () => {\r\n      if (callBack) callBack()\r\n   }\r\n\r\n   const defineNavLink = ((count === 0 && disabledValue === 0) || disabled) ? `${previousLinkPath}` : `${linkPath}`\r\n   const defineButton = commonBtn ? disabled : disabled || disabledValue === count\r\n   const finalBtnClassName = defineButton ? `${s.btnDisabled} ${s.btn}` : s.btn\r\n\r\n   return (\r\n      <>\r\n         {navLink\r\n            ? <NavLink to={defineNavLink}>\r\n               <button disabled={defineButton}\r\n                       onClick={onClickHandler}\r\n                       className={` ${finalBtnClassName} ${className}`}>\r\n                  <span className={`${s.line} ${s.lineTop}`}> </span>\r\n                  <span className={`${s.line} ${s.lineLeft}`}> </span>\r\n                  <span className={`${s.line} ${s.lineRight}`}> </span>\r\n                  <span className={`${s.line} ${s.lineBottom}`}> </span>\r\n                  {name}\r\n               </button>\r\n            </NavLink>\r\n            : <button disabled={defineButton}\r\n                      onClick={onClickHandler}\r\n                      className={`${className} ${finalBtnClassName}`}>\r\n               <span className={`${s.line} ${s.lineTop}`}> </span>\r\n               <span className={`${s.line} ${s.lineLeft}`}> </span>\r\n               <span className={`${s.line} ${s.lineRight}`}> </span>\r\n               <span className={`${s.line} ${s.lineBottom}`}> </span>\r\n               {name}\r\n            </button>}\r\n      </>\r\n   )\r\n}","export function saveState<T>(key: string, state: T) {\r\n   const stateAsString = JSON.stringify(state)\r\n   localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n   let state = defaultState\r\n   const stateAsString = localStorage.getItem(key)\r\n   if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n   return state\r\n}\r\n","import React from \"react\";\r\nimport s from \"./settingsBlock.module.css\";\r\nimport {UniversalInput} from \"../UniversalInput/UniversalInput\";\r\nimport {UniversalButton} from \"../UniversalButton/UniversalButton\";\r\nimport {StateType} from \"../../App\";\r\nimport {ACTION_TYPE, ActionType} from \"../../reducer/reducer\";\r\n\r\ntype SettingsBlockType = {\r\n   state: StateType\r\n   dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport const SettingsBlock: React.FC<SettingsBlockType> = ({state, dispatch}) => {\r\n\r\n   const onChangeHandlerMaxValue = (value: number) => {\r\n      dispatch({type: ACTION_TYPE.SET_MAX_VALUE, maxCounterValue: value});\r\n\r\n      (value < state.installedSettings.startCounterValue ||\r\n         value < 0 || value === state.installedSettings.startCounterValue ||\r\n         state.installedSettings.startCounterValue < 0)\r\n         ? dispatch({type: ACTION_TYPE.THROW_ERROR, error: true})\r\n         : dispatch({type: ACTION_TYPE.THROW_ERROR, error: false})\r\n   }\r\n\r\n   const onChangeHandlerStartValue = (value: number) => {\r\n      dispatch({type: ACTION_TYPE.SET_START_VALUE, startCounterValue: value});\r\n\r\n      (value > state.installedSettings.maxCounterValue ||\r\n         value < 0 || value === state.installedSettings.maxCounterValue)\r\n         ? dispatch({type: ACTION_TYPE.THROW_ERROR, error: true})\r\n         : dispatch({type: ACTION_TYPE.THROW_ERROR, error: false})\r\n   }\r\n\r\n   const onClickSettingsHandler = () => {\r\n      if (state.installedSettings.maxCounterValue === 0 ||\r\n         state.installedSettings.maxCounterValue === 0) {\r\n         dispatch({type: ACTION_TYPE.THROW_ERROR, error: true})\r\n      } else {\r\n         dispatch({type: ACTION_TYPE.THROW_ERROR, error: false})\r\n         dispatch({type: ACTION_TYPE.APPLYING_SETTINGS, disabled: false})\r\n         dispatch({type: ACTION_TYPE.SAVE_IN_LOCAL_STORAGE})\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className={s.settingsBlock}>\r\n         <div className={s.settingsBlockInput}>\r\n            <UniversalInput\r\n               className={s.settingsBlockInputMax}\r\n               spanText={'Max Counter Value'}\r\n               initialValue={state.installedSettings.maxCounterValue}\r\n               error={state.error}\r\n               onChange={onChangeHandlerMaxValue}/>\r\n\r\n            <UniversalInput\r\n               className={s.settingsBlockInputStart}\r\n               spanText={'Start Counter Value'}\r\n               initialValue={state.installedSettings.startCounterValue}\r\n               error={state.error}\r\n               onChange={onChangeHandlerStartValue}/>\r\n         </div>\r\n\r\n         <div className={s.settingsBlockBtn}>\r\n            <UniversalButton\r\n               navLink={true}\r\n               linkPath={'/Preview_Block'}\r\n               previousLinkPath={'/Settings_Block'}\r\n               disabledValue={state.installedSettings.maxCounterValue}\r\n               count={state.installedSettings.startCounterValue}\r\n               disabled={state.error}\r\n               commonBtn={true}\r\n               name={'set settings'}\r\n               callBack={onClickSettingsHandler}/>\r\n         </div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './count.module.css';\r\n\r\ntype CountType = {\r\n   count: number\r\n   maxValue: number\r\n   startValue: number\r\n   showText: boolean\r\n}\r\n\r\nexport const Count: React.FC<CountType> = ({count, maxValue, startValue, showText}) => {\r\n   const ClassNameForNum = `${s.count} ${(count === maxValue || count === startValue) ? s.countFinal : ''}`\r\n   const finalClassName = showText ? s.countText : ClassNameForNum\r\n   const textOrValue = showText ? `Enter values and press 'SET SETTINGS'` : count\r\n\r\n   return (\r\n      <div className={finalClassName}>{textOrValue}</div>\r\n   )\r\n}","import React from \"react\";\r\nimport s from \"./previewBlock.module.css\";\r\nimport {Count} from \"../Count/Count\";\r\nimport {UniversalButton} from \"../UniversalButton/UniversalButton\";\r\nimport {ACTION_TYPE, ActionType} from \"../../reducer/reducer\";\r\nimport {StateType} from \"../../App\";\r\n\r\ntype PreviewBlockType = {\r\n   state: StateType\r\n   dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport const PreviewBlock: React.FC<PreviewBlockType> = ({state, dispatch}) => {\r\n\r\n   const reset = () => dispatch({type: ACTION_TYPE.RESET_VALUE})\r\n   const incrementCount = () => dispatch({type: ACTION_TYPE.INCREMENT_VALUE})\r\n   const decrementCount = () => dispatch({type: ACTION_TYPE.DECREMENT_VALUE})\r\n\r\n\r\n   return (\r\n      <div className={s.previewBlock}>\r\n\r\n         <Count\r\n            showText={state.disabled}\r\n            maxValue={state.counterSettings.maxValue}\r\n            startValue={state.installedSettings.startCounterValue}\r\n            count={state.counterSettings.initialValue}/>\r\n\r\n         <div className={s.btnWrap}>\r\n\r\n            <UniversalButton\r\n               navLink={false}\r\n               commonBtn={false}\r\n               disabled={state.disabled}\r\n               disabledValue={state.counterSettings.maxValue}\r\n               count={state.counterSettings.initialValue}\r\n               name={'increment'}\r\n               callBack={incrementCount}/>\r\n\r\n            <UniversalButton\r\n               navLink={false}\r\n               commonBtn={false}\r\n               disabled={state.disabled}\r\n               disabledValue={state.installedSettings.startCounterValue}\r\n               count={state.counterSettings.initialValue}\r\n               name={'reset'}\r\n               callBack={reset}/>\r\n\r\n            <UniversalButton\r\n               navLink={false}\r\n               commonBtn={false}\r\n               disabled={state.disabled}\r\n               disabledValue={state.counterSettings.initialValue}\r\n               count={state.installedSettings.startCounterValue}\r\n               name={'decrement'}\r\n               callBack={decrementCount}/>\r\n\r\n            <UniversalButton\r\n               navLink={true}\r\n               linkPath={'/Settings_Block'}\r\n               previousLinkPath={'/Preview_Block'}\r\n               disabled={state.error}\r\n               commonBtn={true}\r\n               name={'set settings'}/>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React, {useReducer} from 'react';\nimport s from './App.module.css';\nimport {restoreState} from \"./localStorage/localStorage\";\nimport {SettingsBlock} from \"./component/EditBlock/SettingsBlock\";\nimport {PreviewBlock} from \"./component/PreviewBlock/PreviewBlock\";\nimport {reducer} from \"./reducer/reducer\";\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\n\nexport type  StateType = {\n   disabled: boolean\n   error: boolean\n   installedSettings: {\n      maxCounterValue: number\n      startCounterValue: number\n   }\n   counterSettings: {\n      initialValue: number\n      maxValue: number\n   }\n}\n\ntype RestoreStateType = {\n   maxCounterValue: number\n   startCounterValue: number\n}\n\n\nfunction App() {\n\n   const dateFromLocalStorage = restoreState<RestoreStateType>('Counter_Settings', {\n      maxCounterValue: 0,\n      startCounterValue: 0,\n   })\n\n   const [state, dispatch] = useReducer(reducer, {\n      error: false,\n      disabled: true,\n      installedSettings: dateFromLocalStorage,\n      counterSettings: {initialValue: 0, maxValue: 0}\n   })\n\n\n   return (\n      <BrowserRouter>\n         <div className={s.app}>\n            <Route path='/' exact render={() => <Redirect to={'/Settings_Block'}/>}/>\n            <Route path='/Settings_Block' render={() => <SettingsBlock state={state} dispatch={dispatch}/>}/>\n            <Route path='/Preview_Block' render={() => <PreviewBlock state={state} dispatch={dispatch}/>}/>\n         </div>\n      </BrowserRouter>\n   )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App/>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}